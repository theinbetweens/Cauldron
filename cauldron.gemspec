# Generated by jeweler
# DO NOT EDIT THIS FILE DIRECTLY
# Instead, edit Jeweler::Tasks in Rakefile, and run 'rake gemspec'
# -*- encoding: utf-8 -*-

Gem::Specification.new do |s|
  s.name = %q{cauldron}
  s.version = "0.1.3"

  s.required_rubygems_version = Gem::Requirement.new(">= 0") if s.respond_to? :required_rubygems_version=
  s.authors = ["Warren Sangster"]
  s.date = %q{2011-10-09}
  s.default_executable = %q{cauldron}
  s.description = %q{Cauldron generates a methd from a number of examples that describe the input and the expected output.  It is still at a very early stage of development right now so you're unlikely to get much practical use out of it.}
  s.email = %q{warrensangster@yahoo.com}
  s.executables = ["cauldron"]
  s.extra_rdoc_files = [
    "LICENSE.txt",
    "README",
    "README.rdoc"
  ]
  s.files = [
    ".document",
    "Gemfile",
    "Gemfile.lock",
    "History.md",
    "LICENSE.txt",
    "README",
    "README.rdoc",
    "Rakefile",
    "VERSION",
    "bin/cauldron",
    "cauldron.gemspec",
    "cauldron/.autotest",
    "cauldron/History.txt",
    "cauldron/Manifest.txt",
    "cauldron/README.txt",
    "cauldron/Rakefile",
    "cauldron/bin/cauldron",
    "cauldron/lib/cauldron.rb",
    "cauldron/test/test_cauldron.rb",
    "features/cauldron_example_cases.feature",
    "features/cauldron_generates_runtime_method.feature",
    "features/cauldron_generates_single_paramter_methods.feature",
    "features/cauldron_interactive_start_terminal.feature",
    "features/cauldron_quit_terminal.feature",
    "features/cauldron_start_terminal.feature",
    "features/step_definitions/cauldron_steps.rb",
    "features/step_definitions/terminal_steps.rb",
    "features/support/env.rb",
    "features/support/hooks.rb",
    "features/support/method_1.example",
    "features/support/method_2.example",
    "lib/Chain.rb",
    "lib/ChainMapping.rb",
    "lib/CodeHandler.rb",
    "lib/Mapping.rb",
    "lib/MappingValues.rb",
    "lib/PartialChain.rb",
    "lib/Theory.rb",
    "lib/UnifiedChain.rb",
    "lib/cauldron.rb",
    "lib/cauldron/conversion.rb",
    "lib/cauldron/demos.rb",
    "lib/cauldron/env.rb",
    "lib/cauldron/pot.rb",
    "lib/cauldron/sexp2cauldron.rb",
    "lib/cauldron/terminal.rb",
    "lib/cauldron/theory_factory.rb",
    "lib/cauldron/util/home.rb",
    "lib/cauldron/util/saver.rb",
    "lib/core/ActsAsCode.rb",
    "lib/core/BlockToken.rb",
    "lib/core/CCall.rb",
    "lib/core/CTestCase.rb",
    "lib/core/ClassMethodCallContainer.rb",
    "lib/core/Container.rb",
    "lib/core/InstanceCallContainer.rb",
    "lib/core/MethodUsage.rb",
    "lib/core/PrintVariables.rb",
    "lib/core/TheoryGenerator.rb",
    "lib/core/Token.rb",
    "lib/core/assignment/Assignment.rb",
    "lib/core/assignment/Equal.rb",
    "lib/core/assignment/Equivalent.rb",
    "lib/core/assignment/NotEqual.rb",
    "lib/core/call_container/CallContainer.rb",
    "lib/core/class_method_call/New.rb",
    "lib/core/class_method_call/RuntimeClassMethodCall.rb",
    "lib/core/declaration/Declaration.rb",
    "lib/core/declaration/LiteralDeclaration.rb",
    "lib/core/declaration/VariableDeclaration.rb",
    "lib/core/instance_call/ArrayEach.rb",
    "lib/core/instance_call/ArrayLength.rb",
    "lib/core/instance_call/Chop.rb",
    "lib/core/instance_call/Copy.rb",
    "lib/core/instance_call/DeclaredVariable.rb",
    "lib/core/instance_call/InstanceCall.rb",
    "lib/core/instance_call/Params.rb",
    "lib/core/instance_call/Push.rb",
    "lib/core/instance_call/StringLength.rb",
    "lib/core/instance_call/Times.rb",
    "lib/core/instance_call/instance_calls.rb",
    "lib/core/instance_call/length_equal.rb",
    "lib/core/kernal/EvalCall.rb",
    "lib/core/kernal/LocalVariablesCall.rb",
    "lib/core/literal/Literal.rb",
    "lib/core/literal/Raw.rb",
    "lib/core/literal/RuntimeMethodLiteral.rb",
    "lib/core/literal/StatementLiteral.rb",
    "lib/core/method_call/AvailableVariablesCall.rb",
    "lib/core/method_call/ClassCall.rb",
    "lib/core/method_call/DefCall.rb",
    "lib/core/method_call/EvaluateClassCall.rb",
    "lib/core/method_call/MethodNameCall.rb",
    "lib/core/method_call/ToDeclarationCall.rb",
    "lib/core/requirement/Requirement.rb",
    "lib/core/runtime_class/ArrayClass.rb",
    "lib/core/runtime_class/ClassCallClass.rb",
    "lib/core/runtime_class/ClassEvaluationClass.rb",
    "lib/core/runtime_class/ClassName.rb",
    "lib/core/runtime_class/DefCallClass.rb",
    "lib/core/runtime_class/EqualClass.rb",
    "lib/core/runtime_class/FixnumClass.rb",
    "lib/core/runtime_class/InstanceCallClass.rb",
    "lib/core/runtime_class/InstanceCallContainerClass.rb",
    "lib/core/runtime_class/InstanceClassCallClass.rb",
    "lib/core/runtime_class/LiteralClass.rb",
    "lib/core/runtime_class/MethodParameterClass.rb",
    "lib/core/runtime_class/MethodUsageClass.rb",
    "lib/core/runtime_class/RequirementClass.rb",
    "lib/core/runtime_class/ReturnClass.rb",
    "lib/core/runtime_class/RuntimeClass.rb",
    "lib/core/runtime_class/RuntimeClassClass.rb",
    "lib/core/runtime_class/RuntimeMethodClass.rb",
    "lib/core/runtime_class/StatementClass.rb",
    "lib/core/runtime_class/StringClass.rb",
    "lib/core/runtime_class/StringLengthClass.rb",
    "lib/core/runtime_class/StringVariableClass.rb",
    "lib/core/runtime_class/ThisClass.rb",
    "lib/core/runtime_class/UnknownClass.rb",
    "lib/core/runtime_class/class_names.rb",
    "lib/core/runtime_class/runtime_class.rb",
    "lib/core/runtime_method/ActsAsRuntimeMethod.rb",
    "lib/core/runtime_method/ParametersContainer.rb",
    "lib/core/runtime_method/RealisedRuntimeMethod.rb",
    "lib/core/runtime_method/RuntimeMethod.rb",
    "lib/core/runtime_method/WriteParameters.rb",
    "lib/core/statement/ActsAsStatement.rb",
    "lib/core/statement/ArrayAccess.rb",
    "lib/core/statement/BlockStatement.rb",
    "lib/core/statement/DeclarationStatement.rb",
    "lib/core/statement/HackStatement.rb",
    "lib/core/statement/HashAccess.rb",
    "lib/core/statement/OpenStatement.rb",
    "lib/core/statement/RealisedStatement.rb",
    "lib/core/statement/SingleLineBlockStatement.rb",
    "lib/core/statement/Statement.rb",
    "lib/core/statement/StatementGroup.rb",
    "lib/core/statement/StatementStructure2.rb",
    "lib/core/statement/TheoryStatement.rb",
    "lib/core/statement/TopologicalStatements.rb",
    "lib/core/syntax/Addition.rb",
    "lib/core/syntax/BlockContainer.rb",
    "lib/core/syntax/Boolean.rb",
    "lib/core/syntax/Code.rb",
    "lib/core/syntax/Do.rb",
    "lib/core/syntax/False.rb",
    "lib/core/syntax/If.rb",
    "lib/core/syntax/Nil.rb",
    "lib/core/syntax/Return.rb",
    "lib/core/syntax/Subtract.rb",
    "lib/core/syntax/This.rb",
    "lib/core/syntax/True.rb",
    "lib/core/syntax/syntax.rb",
    "lib/core/tracking/ActsAsTrackable.rb",
    "lib/core/tracking/History.rb",
    "lib/core/tracking/RuntimeTrackingMethod.rb",
    "lib/core/tracking/Step.rb",
    "lib/core/variable/ArrayVariable.rb",
    "lib/core/variable/BaseVariable.rb",
    "lib/core/variable/BlockVariable.rb",
    "lib/core/variable/FixnumVariable.rb",
    "lib/core/variable/HistoryVariable.rb",
    "lib/core/variable/MethodParameter.rb",
    "lib/core/variable/MethodUsageVariable.rb",
    "lib/core/variable/NilVariable.rb",
    "lib/core/variable/RuntimeMethodParameter.rb",
    "lib/core/variable/StatementVariable.rb",
    "lib/core/variable/StepVariable.rb",
    "lib/core/variable/StringVariable.rb",
    "lib/core/variable/TypeVariable.rb",
    "lib/core/variable/Unknown.rb",
    "lib/core/variable/UnknownVariable.rb",
    "lib/core/variable/Variable.rb",
    "lib/core/variable/VariableContainer.rb",
    "lib/core/variable/VariableIncluded.rb",
    "lib/core/variable/VariableReference.rb",
    "lib/error/FailedToFindStatementContainerError.rb",
    "lib/error/FailedToFindStatementError.rb",
    "lib/error/FailedToFindVariableError.rb",
    "lib/error/FailedToLiteraliseError.rb",
    "lib/error/FailedVariableMatch.rb",
    "lib/error/ImproperStatementUsageError.rb",
    "lib/error/IncompatiableRequirementsError.rb",
    "lib/error/InvalidStatementError.rb",
    "lib/error/MethodSizeError.rb",
    "lib/error/RuntimeSyntaxError.rb",
    "lib/error/UnexpectedStatementTypeError.rb",
    "lib/error/UnknownStatementType.rb",
    "lib/error/UnliteralisableError.rb",
    "lib/implemented_chain.rb",
    "lib/intrinsic/IntrinsicLastRuntimeMethod.rb",
    "lib/intrinsic/IntrinsicLiteral.rb",
    "lib/intrinsic/IntrinsicObject.rb",
    "lib/intrinsic/IntrinsicRuntimeMethod.rb",
    "lib/intrinsic/IntrinsicTestCases.rb",
    "lib/logger/StandardLogger.rb",
    "lib/required.rb",
    "lib/ruby_code/Array.rb",
    "lib/ruby_code/Fixnum.rb",
    "lib/ruby_code/Hash.rb",
    "lib/ruby_code/NilClass.rb",
    "lib/ruby_code/Object.rb",
    "lib/ruby_code/String.rb",
    "lib/ruby_code/Symbol.rb",
    "lib/standard_library/Tasks.rb",
    "lib/theories.rb",
    "lib/theory/ActionImplementation.rb",
    "lib/theory/TheoryAction.rb",
    "lib/theory/TheoryChainValidator.rb",
    "lib/theory/TheoryComponent.rb",
    "lib/theory/TheoryConnector.rb",
    "lib/theory/TheoryDependent.rb",
    "lib/theory/TheoryImplementation.rb",
    "lib/theory/TheoryResult.rb",
    "lib/theory/TheoryVariable.rb",
    "lib/theory/theory_collection.rb",
    "lib/util/ClassEvaluation.rb",
    "lib/util/CodeEvaluation.rb",
    "lib/util/DeclarationStatementEvaluation.rb",
    "lib/util/MethodEvaluation.rb",
    "lib/util/MethodTester.rb",
    "lib/util/MethodValidation.rb",
    "lib/util/MethodWriter.rb",
    "lib/util/Parser.rb",
    "lib/util/StatementCheck.rb",
    "lib/util/StringToTheory.rb",
    "lib/util/System.rb",
    "sandbox.rb",
    "spec/cauldron/chain_spec.rb",
    "spec/cauldron/demos_spec.rb",
    "spec/cauldron/pot_spec.rb",
    "spec/cauldron/runtime_method_spec.rb",
    "spec/cauldron/saver_spec.rb",
    "spec/cauldron/sexp_2_cauldron_spec.rb",
    "spec/cauldron/terminal_spec.rb",
    "spec/cauldron/theory_action_spec.rb",
    "spec/cauldron/theory_connector_spec.rb",
    "spec/cauldron/theory_spec.rb",
    "spec/cauldron/unified_chain_spec.rb",
    "spec/spec_helper.rb",
    "tasks/development_tasks.rake",
    "tasks/theory_tasks.rake",
    "test/fixtures/chains/1/declaration.txt",
    "test/fixtures/chains/1/dump",
    "test/fixtures/chains/2/declaration.txt",
    "test/fixtures/chains/2/dump",
    "test/fixtures/chains/3/declaration.txt",
    "test/fixtures/chains/3/dump",
    "test/fixtures/implementation_results/0/declaration.txt",
    "test/fixtures/implementation_results/0/dump",
    "test/fixtures/theories/0/declaration.txt",
    "test/fixtures/theories/0/desc",
    "test/fixtures/theories/0/dump",
    "test/fixtures/theories/1/declaration.txt",
    "test/fixtures/theories/1/desc",
    "test/fixtures/theories/1/dump",
    "test/fixtures/theories/10/declaration.txt",
    "test/fixtures/theories/10/desc",
    "test/fixtures/theories/10/dump",
    "test/fixtures/theories/11/declaration.txt",
    "test/fixtures/theories/11/desc",
    "test/fixtures/theories/11/dump",
    "test/fixtures/theories/12/declaration.txt",
    "test/fixtures/theories/12/desc",
    "test/fixtures/theories/12/dump",
    "test/fixtures/theories/13/declaration.txt",
    "test/fixtures/theories/13/desc",
    "test/fixtures/theories/13/dump",
    "test/fixtures/theories/14/declaration.txt",
    "test/fixtures/theories/14/desc",
    "test/fixtures/theories/14/dump",
    "test/fixtures/theories/15/declaration.txt",
    "test/fixtures/theories/15/desc",
    "test/fixtures/theories/15/dump",
    "test/fixtures/theories/16/declaration.txt",
    "test/fixtures/theories/16/desc",
    "test/fixtures/theories/16/dump",
    "test/fixtures/theories/17/declaration.txt",
    "test/fixtures/theories/17/desc",
    "test/fixtures/theories/17/dump",
    "test/fixtures/theories/18/declaration.txt",
    "test/fixtures/theories/18/desc",
    "test/fixtures/theories/18/dump",
    "test/fixtures/theories/19/declaration.txt",
    "test/fixtures/theories/19/desc",
    "test/fixtures/theories/19/dump",
    "test/fixtures/theories/2/declaration.txt",
    "test/fixtures/theories/2/desc",
    "test/fixtures/theories/2/dump",
    "test/fixtures/theories/20/declaration.txt",
    "test/fixtures/theories/20/desc",
    "test/fixtures/theories/20/dump",
    "test/fixtures/theories/3/declaration.txt",
    "test/fixtures/theories/3/desc",
    "test/fixtures/theories/3/dump",
    "test/fixtures/theories/4/declaration.txt",
    "test/fixtures/theories/4/desc",
    "test/fixtures/theories/4/dump",
    "test/fixtures/theories/5/declaration.txt",
    "test/fixtures/theories/5/desc",
    "test/fixtures/theories/5/dump",
    "test/fixtures/theories/6/declaration.txt",
    "test/fixtures/theories/6/desc",
    "test/fixtures/theories/6/dump",
    "test/fixtures/theories/7/declaration.txt",
    "test/fixtures/theories/7/desc",
    "test/fixtures/theories/7/dump",
    "test/fixtures/theories/8/declaration.txt",
    "test/fixtures/theories/8/desc",
    "test/fixtures/theories/8/dump",
    "test/fixtures/theories/9/declaration.txt",
    "test/fixtures/theories/9/desc",
    "test/fixtures/theories/9/dump",
    "test/fixtures/theory_implementations/0/declaration.txt",
    "test/fixtures/theory_implementations/0/desc.txt",
    "test/fixtures/theory_implementations/0/dump",
    "test/fixtures/theory_implementations/0/theory_id",
    "test/fixtures/theory_implementations/1/declaration.txt",
    "test/fixtures/theory_implementations/1/desc.txt",
    "test/fixtures/theory_implementations/1/dump",
    "test/fixtures/theory_implementations/1/theory_id",
    "test/fixtures/theory_implementations/2/declaration.txt",
    "test/fixtures/theory_implementations/2/desc.txt",
    "test/fixtures/theory_implementations/2/dump",
    "test/fixtures/theory_implementations/2/theory_id",
    "test/output/simple_method.txt",
    "test/output/test_method/first_possible_method.txt",
    "test/output/test_simple_cases/simple_case_01.txt",
    "test/output/test_simple_cases/simple_case_02.txt",
    "test/output/test_simple_cases/simple_case_03.txt",
    "test/output/test_simple_cases/simple_case_04.txt",
    "test/output/test_simple_cases/simple_case_05.txt",
    "test/output/test_simple_cases/simple_case_06.txt",
    "test/output/test_simple_cases/simple_case_07.txt",
    "test/output/test_simple_cases/simple_case_08.txt",
    "test/tc_describe.rb",
    "test/tc_method.rb",
    "test/tc_requirement.rb",
    "test/tc_suite_complete.rb",
    "test/tc_variable.rb",
    "test/ts_complete.rb",
    "test/ts_stable.rb",
    "test/unit/core/declaration/tc_literal_declaration.rb",
    "test/unit/core/method_call/tc_class_call.rb",
    "test/unit/core/runtime_method/tc_realised_runtime_method.rb",
    "test/unit/core/runtime_method/tc_runtime_method.rb",
    "test/unit/core/statement/tc_array_access.rb",
    "test/unit/core/statement/tc_block_statement.rb",
    "test/unit/core/statement/tc_hack_statement.rb",
    "test/unit/core/statement/tc_open_statement.rb",
    "test/unit/core/statement/tc_statement.rb",
    "test/unit/core/statement/tc_statement_group.rb",
    "test/unit/core/statement/tc_statement_replace_variable.rb",
    "test/unit/core/statement/tc_theory_statement.rb",
    "test/unit/core/syntax/tc_block_container.rb",
    "test/unit/core/syntax/tc_if_container.rb",
    "test/unit/core/tc_class_method_call.rb",
    "test/unit/core/tc_container.rb",
    "test/unit/core/tc_ctest_case.rb",
    "test/unit/core/tc_instance_call_container.rb",
    "test/unit/core/tc_literal.rb",
    "test/unit/core/tc_theory_generator.rb",
    "test/unit/core/tc_theory_generator_heavy.rb",
    "test/unit/core/tracking/tc_history.rb",
    "test/unit/core/tracking/tc_step.rb",
    "test/unit/core/variable/tc_array_variable.rb",
    "test/unit/core/variable/tc_block_variable.rb",
    "test/unit/core/variable/tc_fixnum_variable.rb",
    "test/unit/core/variable/tc_method_parameter_variable.rb",
    "test/unit/core/variable/tc_runtime_method_variable.rb",
    "test/unit/core/variable/tc_string_variable.rb",
    "test/unit/core/variable/tc_unknown.rb",
    "test/unit/core/variable/tc_variable_reference.rb",
    "test/unit/ruby_code/tc_array.rb",
    "test/unit/ruby_code/tc_fixnum.rb",
    "test/unit/ruby_code/tc_hash.rb",
    "test/unit/ruby_code/tc_string.rb",
    "test/unit/tc_chain.rb",
    "test/unit/tc_chain_mapping.rb",
    "test/unit/tc_chain_with_case_1.rb",
    "test/unit/tc_instance_call.rb",
    "test/unit/tc_method_usage.rb",
    "test/unit/tc_pot.rb",
    "test/unit/tc_runtime_tracking_method.rb",
    "test/unit/tc_theory.rb",
    "test/unit/tc_variable_declaration.rb",
    "test/unit/theory/tc_theory_action.rb",
    "test/unit/theory/tc_theory_action_implementation.rb",
    "test/unit/theory/tc_theory_chain_validator.rb",
    "test/unit/theory/tc_theory_connector.rb",
    "test/unit/theory/tc_theory_dependent.rb",
    "test/unit/theory/tc_theory_implementation.rb",
    "test/unit/theory/tc_theory_result.rb",
    "test/unit/theory/tc_theory_variable.rb",
    "test/unit/util/tc_method_validation.rb",
    "test/unit/util/tc_parser.rb",
    "test/unit/util/tc_string_to_theory.rb",
    "test/unit/variable/tc_method_usage_variable.rb",
    "tmp/runtime_method_evaluation.rb"
  ]
  s.homepage = %q{http://github.com/theinbetweens/cauldron}
  s.licenses = ["MIT"]
  s.require_paths = ["lib"]
  s.required_ruby_version = Gem::Requirement.new(">= 1.6.8")
  s.rubygems_version = %q{1.4.0}
  s.summary = %q{Generate simple ruby methods from the input(s) and expected output}

  if s.respond_to? :specification_version then
    s.specification_version = 3

    if Gem::Version.new(Gem::VERSION) >= Gem::Version.new('1.2.0') then
      s.add_runtime_dependency(%q<ruby2ruby>, ["~> 1.2.5"])
      s.add_development_dependency(%q<shoulda>, [">= 0"])
      s.add_development_dependency(%q<bundler>, ["~> 1.0.15"])
      s.add_development_dependency(%q<jeweler>, ["~> 1.6.2"])
      s.add_development_dependency(%q<rspec>, ["~> 2.6.0"])
      s.add_development_dependency(%q<rcov>, [">= 0"])
      s.add_development_dependency(%q<ruby_parser>, ["~> 2.0.6"])
      s.add_development_dependency(%q<aruba>, ["~> 0.4.5"])
    else
      s.add_dependency(%q<ruby2ruby>, ["~> 1.2.5"])
      s.add_dependency(%q<shoulda>, [">= 0"])
      s.add_dependency(%q<bundler>, ["~> 1.0.15"])
      s.add_dependency(%q<jeweler>, ["~> 1.6.2"])
      s.add_dependency(%q<rspec>, ["~> 2.6.0"])
      s.add_dependency(%q<rcov>, [">= 0"])
      s.add_dependency(%q<ruby_parser>, ["~> 2.0.6"])
      s.add_dependency(%q<aruba>, ["~> 0.4.5"])
    end
  else
    s.add_dependency(%q<ruby2ruby>, ["~> 1.2.5"])
    s.add_dependency(%q<shoulda>, [">= 0"])
    s.add_dependency(%q<bundler>, ["~> 1.0.15"])
    s.add_dependency(%q<jeweler>, ["~> 1.6.2"])
    s.add_dependency(%q<rspec>, ["~> 2.6.0"])
    s.add_dependency(%q<rcov>, [">= 0"])
    s.add_dependency(%q<ruby_parser>, ["~> 2.0.6"])
    s.add_dependency(%q<aruba>, ["~> 0.4.5"])
  end
end

